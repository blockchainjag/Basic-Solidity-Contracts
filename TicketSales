pragma solidity ^0.5.0;

contract buytickets {
    address payable buyer;
    uint public tickets;
    uint constant price = 1 ether;
    
    mapping(address => uint) public ticketsbought;
    
    constructor () public {
        tickets = 500;
        buyer = msg.sender;
    }
    
    function buyTicket(uint amount) public payable {
        if(msg.value != (amount*price) || amount > tickets){
            //throw
            revert();
        }
    ticketsbought[msg.sender] += amount;
    tickets -= amount;

     if (tickets == 0){
    selfdestruct(address(buyer));
}
}
    function() external payable {
        buyTicket(1);
  }
}
